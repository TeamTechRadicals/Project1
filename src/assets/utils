useEffect(() => {
  //   if (values.apprenticeshipTitle.length > 0) {
  //     setTDP(1);
  //   } else {
  //     setTDP(0);
  //     return;
  //   }
  //   if (
  //     values.apprenticeshipDescription.length > 0 &&
  //     values.companyDescription.length > 0 &&
  //     values.apprenticeshipTitle.length > 0
  //   ) {
  //     setTDP(3);
  //   } else if (
  //     values.companyDescription.length > 0 &&
  //     values.apprenticeshipTitle.length > 0
  //   ) {
  //     setTDP(2);
  //   }
  // }, [values]);



  await addDoc(collection(db, "apprenticeships"), {
        ...appr,
        timeStamp: serverTimestamp(),
        creatorId: user?.uid,
      })
        .then(() => {
          // setLoading(false);
          // navigate("/apprenticeships");
          // resetStore();
        })
        .catch(() => {
          // setLoading(false);
          // toast({
          //   position: "bottom",
          //   duration: 2000,
          //   render: () => (
          //     <Box
          //       borderRadius={20}
          //       bgColor='lavender'
          //       p='1'
          //       border='1px solid #793EF5'>
          //       <Text textAlign='center' color='#793EF5' fontWeight={600}>
          //         Something went wrong
          //       </Text>
          //     </Box>
          //   ),
          // });
        });


        const [errors, setErrors] = useState<ApprErrorTypes>({
    apprenticeshipTitle: null,
    companyDescription: null,
    apprenticeshipDescription: null,
  });

  




  {errors.apprenticeshipTitle && (
            <Text
              color='#793EF5'
              textAlign='center'
              fontStyle='oblique'
              fontSize={15}>
              {errors.apprenticeshipTitle}
            </Text>
          )}




          {errors.companyDescription && (
            <Text
              color='#793EF5'
              textAlign='center'
              fontStyle='oblique'
              fontSize={15}>
              {errors.companyDescription}
            </Text>
          )}



          {errors.apprenticeshipDescription && (
            <Text
              color='#793EF5'
              textAlign='center'
              fontStyle='oblique'
              fontSize={15}>
              {errors.apprenticeshipDescription}
            </Text>
          )}




           //   if (
  //     location.pathname === "/apprenticeships" ||
  //     location.pathname === "/internships" ||
  //     location.pathname === "/jobs" ||
  //     location.pathname === "/settings" ||
  //     location.pathname === "/"
  //   )


  // useEffect(() => {
  //   if (user) {
  //     updateUserData({
  //       displayName: user?.displayName,
  //       photoURL: user?.photoURL,
  //     });
  //     const unsub = onSnapshot<ApprType>(
  //       query(
  //         collection(db, "apprenticeships"),
  //         where("creatorId", "==", `${user?.uid}`)
  //       ) as CollectionReference<ApprType>,
  //       (snapshot) => {
  //         const data = snapshot.docs.map((doc) => ({
  //           ...doc.data(),
  //           id: doc.id,
  //         }));
  //         setApprData(data);
  //       }
  //     );
  //     return () => unsub;
  //   }
  // }, [user]);

  // try {
        //   let urls: { name: string; url: string; refId: string }[] = [];
        //   for await (const video of videos) {
        //     const uploadTask = await uploadBytes(
        //       ref(storage, `apprenticeship-videos/${id}${video.name}`),
        //       video
        //     );
        //     const url = await getDownloadURL(uploadTask.ref);
        //     urls.push({
        //       url,
        //       name: video.name,
        //       refId: `${id}${video.name}`,
        //     });
        //   }
        //   return urls;
        // } catch (err) {
        //   // reject(err as FirebaseError);
        //   throw err as FirebaseError;
        //   // console.log(err);
        // }
        //   resolve(urls);




      //   await uploadVideos()
      //     .then(async (urls) => {
      //       if (logo) {
      //         uploadBytes(
      //           ref(storage, `apprenticeship-logos/${id}${logo.name}`),
      //           logo
      //         )
      //           .then((uploadTask) => {
      //             getDownloadURL(uploadTask.ref)
      //               .then(async (url) => {
      //                 await addDoc(collection(db, "apprenticeships"), {
      //                   ...rest,
      //                   videosUrls: urls,
      //                   timeStamp: serverTimestamp(),
      //                   creatorId: user?.uid,
      //                   logoUrl: {
      //                     refId: `${id}${logo.name}`,
      //                     url,
      //                   },
      //                 })
      //                   .then(() => {
      //                     setLoading(false);
      //                     navigate("/apprenticeships");
      //                   })
      //                   .catch((err) => {
      //                     console.log(err);
      //                     setLoading(false);
      //                   });
      //               })
      //               .catch((err) => {
      //                 console.log(err);
      //                 setLoading(false);
      //               });
      //           })
      //           .catch((err) => {
      //             console.log(err);
      //             setLoading(false);
      //           });